{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LAMMERT\\\\Desktop\\\\poryecto\\\\budget-manager-app\\\\src\\\\components\\\\PersonalFinance.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst expenseCategories = [\"Housing – Rent, mortgage, property taxes, home maintenance\", \"Utilities – Electricity, water, gas, internet, phone bills\", \"Groceries – Food, household essentials\", \"Transportation – Fuel, public transport, car payments, maintenance, insurance\", \"Healthcare – Insurance, medical bills, prescriptions, dental, vision care\", \"Debt Payments – Loan repayments, credit card bills\", \"Insurance – Health, life, car, home, disability insurance\", \"Discretionary Expenses (Wants) – Dining Out, Entertainment, Shopping, Travel & Vacations, Subscriptions, Gifts & Donations\", \"Savings & Investments – Emergency Fund, Retirement Savings, Education\"];\nconst PersonalFinance = () => {\n  _s();\n  const [incomeCategories, setIncomeCategories] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [newIncome, setNewIncome] = useState('');\n  const [selectedExpenseCategory, setSelectedExpenseCategory] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [weeklyEarnings, setWeeklyEarnings] = useState(0);\n  const addIncomeCategory = () => {\n    if (newIncome) {\n      setIncomeCategories([...incomeCategories, newIncome]);\n      setNewIncome('');\n    }\n  };\n  const addExpense = () => {\n    if (selectedExpenseCategory && expenseAmount) {\n      setExpenses([...expenses, {\n        category: selectedExpenseCategory,\n        amount: parseFloat(expenseAmount)\n      }]);\n      setSelectedExpenseCategory('');\n      setExpenseAmount('');\n    }\n  };\n  const totalIncome = incomeCategories.length > 0 ? incomeCategories.length * weeklyEarnings : 0;\n  const totalExpenses = expenses.reduce((acc, curr) => acc + curr.amount, 0);\n  const balance = totalIncome - totalExpenses;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"personal-finance\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Personal Finance Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Income Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newIncome,\n        onChange: e => setNewIncome(e.target.value),\n        placeholder: \"Add Income Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addIncomeCategory,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: incomeCategories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: weeklyEarnings,\n        onChange: e => setWeeklyEarnings(e.target.value),\n        placeholder: \"Weekly Earnings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedExpenseCategory,\n        onChange: e => setSelectedExpenseCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Expense Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), expenseCategories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: expenseAmount,\n        onChange: e => setExpenseAmount(e.target.value),\n        placeholder: \"Expense Amount (\\xA3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addExpense,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: expenses.map((expense, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [expense.category, \": \\xA3\", expense.amount]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\xA3\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Expenses: \\xA3\", totalExpenses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Balance: \\xA3\", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(PersonalFinance, \"IU5O9gZQwRHokiVocMijDiG0xR0=\");\n_c = PersonalFinance;\nexport default PersonalFinance;\nvar _c;\n$RefreshReg$(_c, \"PersonalFinance\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","expenseCategories","PersonalFinance","_s","incomeCategories","setIncomeCategories","expenses","setExpenses","newIncome","setNewIncome","selectedExpenseCategory","setSelectedExpenseCategory","expenseAmount","setExpenseAmount","weeklyEarnings","setWeeklyEarnings","addIncomeCategory","addExpense","category","amount","parseFloat","totalIncome","length","totalExpenses","reduce","acc","curr","balance","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","index","expense","_c","$RefreshReg$"],"sources":["C:/Users/LAMMERT/Desktop/poryecto/budget-manager-app/src/components/PersonalFinance.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst expenseCategories = [\n    \"Housing – Rent, mortgage, property taxes, home maintenance\",\n    \"Utilities – Electricity, water, gas, internet, phone bills\",\n    \"Groceries – Food, household essentials\",\n    \"Transportation – Fuel, public transport, car payments, maintenance, insurance\",\n    \"Healthcare – Insurance, medical bills, prescriptions, dental, vision care\",\n    \"Debt Payments – Loan repayments, credit card bills\",\n    \"Insurance – Health, life, car, home, disability insurance\",\n    \"Discretionary Expenses (Wants) – Dining Out, Entertainment, Shopping, Travel & Vacations, Subscriptions, Gifts & Donations\",\n    \"Savings & Investments – Emergency Fund, Retirement Savings, Education\"\n];\n\nconst PersonalFinance = () => {\n    const [incomeCategories, setIncomeCategories] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [newIncome, setNewIncome] = useState('');\n    const [selectedExpenseCategory, setSelectedExpenseCategory] = useState('');\n    const [expenseAmount, setExpenseAmount] = useState('');\n    const [weeklyEarnings, setWeeklyEarnings] = useState(0);\n\n    const addIncomeCategory = () => {\n        if (newIncome) {\n            setIncomeCategories([...incomeCategories, newIncome]);\n            setNewIncome('');\n        }\n    };\n\n    const addExpense = () => {\n        if (selectedExpenseCategory && expenseAmount) {\n            setExpenses([...expenses, { category: selectedExpenseCategory, amount: parseFloat(expenseAmount) }]);\n            setSelectedExpenseCategory('');\n            setExpenseAmount('');\n        }\n    };\n\n    const totalIncome = incomeCategories.length > 0 ? incomeCategories.length * weeklyEarnings : 0;\n    const totalExpenses = expenses.reduce((acc, curr) => acc + curr.amount, 0);\n    const balance = totalIncome - totalExpenses;\n\n    return (\n        <div className=\"personal-finance\">\n            <h2>Personal Finance Management</h2>\n            <div>\n                <h3>Income Categories</h3>\n                <input \n                    type=\"text\" \n                    value={newIncome} \n                    onChange={(e) => setNewIncome(e.target.value)} \n                    placeholder=\"Add Income Category\" \n                />\n                <button onClick={addIncomeCategory}>Add</button>\n                <ul>\n                    {incomeCategories.map((category, index) => (\n                        <li key={index}>{category}</li>\n                    ))}\n                </ul>\n                <input \n                    type=\"number\" \n                    value={weeklyEarnings} \n                    onChange={(e) => setWeeklyEarnings(e.target.value)} \n                    placeholder=\"Weekly Earnings\" \n                />\n            </div>\n            <div>\n                <h3>Expenses</h3>\n                <select \n                    value={selectedExpenseCategory} \n                    onChange={(e) => setSelectedExpenseCategory(e.target.value)}\n                >\n                    <option value=\"\">Select Expense Category</option>\n                    {expenseCategories.map((category, index) => (\n                        <option key={index} value={category}>{category}</option>\n                    ))}\n                </select>\n                <input \n                    type=\"number\" \n                    value={expenseAmount} \n                    onChange={(e) => setExpenseAmount(e.target.value)} \n                    placeholder=\"Expense Amount (£)\" \n                />\n                <button onClick={addExpense}>Add Expense</button>\n                <ul>\n                    {expenses.map((expense, index) => (\n                        <li key={index}>{expense.category}: £{expense.amount}</li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                <h3>Total Income: £{totalIncome}</h3>\n                <h3>Total Expenses: £{totalExpenses}</h3>\n                <h3>Balance: £{balance}</h3>\n            </div>\n        </div>\n    );\n};\n\nexport default PersonalFinance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}